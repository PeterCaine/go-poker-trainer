package templates

import (
    "github.com/PeterCaine/go-poker-trainer/pkg/poker"
    "fmt"
    "strconv"
    )

templ TableComponent(communityCards []poker.Card, playerCards []poker.Card, currentPhase string, rng *poker.Range){
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <meta charset="UTF-8"/>
            <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
            <title>Nut Buster</title>
            <link rel="stylesheet" href="/static/styles.css"/>
            <script src="https://unpkg.com/htmx.org@1.9.6"></script>
        </head>
        <body>
            <div class="table-container">
                <!-- Community Cards (Reveal One Step at a Time) -->
                <div class="deck-container">
                    for _, card := range communityCards {
                        @CardComponent(card)
                    }
                </div>
                <div class="contoller">
                    <button
                        hx-get="/deal"
                        hx-trigger="click"
                        hx-target=".table-container"
                        hx-swap="outerHTML"
                        class="deal-button"
                    >
                        { currentPhase }
                    </button>

                </div>

                <div class="player-hand">
                    <h2>Hero</h2>
                    <div class="player-cards">
                        for _, card := range playerCards{
                            @CardComponent(card)
                        }
                    </div>
                </div>
                <div class="range-container">
                    @RangeGrid(rng)
                </div>
            </div>
        </body>
    </html>
}

templ CardComponent(card poker.Card){
    <div class={ "card", "suit-" + card.Suit}>
        <div class="card-inner">
            <div class="card-center">
                { card.Name }
            </div>
        </div>
    </div>
}

templ RangeGrid(r *poker.Range) {
    <div class="range-grid">
        for i := 0; i < 13; i++ {
            <div class="grid-row">
                for j := 0; j < 13; j++ {

                    <button 
                        class={ "grid-cell", templ.KV("selected", r.Grid[i][j].Selected) }
                        hx-post={ fmt.Sprintf("/toggle-range/%d/%d", i, j) }
                        hx-swap="outerHTML"
                        hx-trigger="click"
                        hx-on:after-request="htmx.ajax('GET', '/range-stats', {target:'#range-stats'});"
                    >
                        { r.Grid[i][j].String() }
                    </button>
                }
            </div>
        }
    </div>
    
        @RangeStats(r)

    <div class="update-stats">
    <button 
        hx-get="/range-stats"
        hx-target="#range-stats"
        hx-swap="outerHTML"
        hx-trigger="click"
        class="update-stats-button"
        >
        Recalculate Combos
    </button>
    </div>
}

templ RangeStats(r *poker.Range){
    <div id="range-stats" class="stats">
        <p>Total combinations in range: { strconv.Itoa(r.GetTotalCombinationsInRange()) } out of 1326</p>
    </div>
}
